Hello everybody, welcome to today's fireside chat about D3. I'm super excited to be here. If we haven't met before, my name is Jill Brown and I am the programs director at the Data Visualization Society. And I'll be moderating today's conversation with a few of our D3 experts. So this is part one in a two part D3 series and we're really excited to dive into the winds and whys of using D3 all the way to some of the technical details and the nuances of D3 that might come in our second fireside chat on the 31st. So just to give you a little bit of background on the Data Visualization Society. So we were founded to serve as a professional home for those working across the discipline of data visualization while leading others into this growing and dynamic field and really to increase the visibility and value of databases to the general public. So our mission is to connect data visualizers across text acts, subject areas and experience and you can become a member of the Data Visualization Society at datavisualizationsociety.org. So to kick off the conversation today, I am going to introduce our panelists one by one. So each of them has really excellent bios and I want to make sure to showcase all of the neat things that they bring to the table before we dive into our discussion. So first, one of our esteemed panelists is Nadi Bremer. So Nadi is a Data Visualization artist that once graduated as an astronomer started working as a data scientist before finding her true passion in the visualization of data. As 2017's best individual in the information is beautiful awards and co-writer of data sketches, she focuses on visuals that are uniquely crafted to each specific data set, often using large and complex data sets while employing vibrant color palettes. She's made visualizations and art for companies such as Google News Lab, Sony Music, Unisf and the New York Times as well as UNESCO. So welcome Nadi. Thank you for super excited to have you here. Thank you. I'm really excited as well. It's been a while since I got to talk about the three. So looking forward to it. Love it. OK, next I'm going to invite onto this stage, Zan Armstrong. So Zan is a Data Visualization consultant with a background in data analysis. Through her work, she empowers people to use visualization to better understand whatever data is most important to them. So Zan has contributed to scientific discoveries as a member of the Google Research Applied Sciences team. Sorry about that. Tracked COVID and wastewater for California State and County Public Health officials in the public, created visualization tools for researchers at Yale, Stanford and Berkeley, and forecasted revenue as a Google Data Analyst. So Zan's work has been published in Scientific American and Exhibited in SFMOMA and Arts Electronica. She has published Data Visualization Research and IEEE InfoBiz and Spoken of Converses, including Openedness, Compt Outlayer and Sci-Fi. So welcome Zan. Super excited to have you here. Thank you. It's really exciting to be here. Awesome. And our third panelist is that Karyn Keller. So Karyn is a Data Visualization Designer, Developer and Educator. He has been engaged in client services, developing custom data visualizations with D3 and other frameworks since 2016. He has been teaching an online graduate course in data visualization with Homes and Netsuset. Forster Polytechnic Institute for six years. He is currently an independent consultant and also working on developing VisHub.com, a collaborative data visualization platform for accelerating project delivery. Wow. So much. You guys bring so much to this conversation. I'm very, very excited that you all are here today and talk about D3. So welcome, each of you. Let's start off with just kind of the question that I think everybody has when learning about D3 for the first time. Why would somebody want to learn D3? What can you do with it? Zan, you want to kick us off? I think it looks like Nadie and my husband. I just felt like I'll just unmute myself. So it becomes more of a casual conversation. I think one of the things that's interesting about D3 is that it's not a charting library. There's no concept of here as a bar chart and people get to D3 sometimes and are like, D3, data is, I'm ready to make a bar chart and why did it just take 100 lines of code to make a bar chart? I think what's really amazing is it takes a lot of lines of code to make a bar chart. It also takes 100 lines of code to make something custom, a chart that nobody's ever seen before, something that really works for your data. And I think that what's really, one of the things that's really special to me about D3 is that that relationship between going from data to defining visual forms and that you don't have, you're not constrained to what somebody else has decided a chart should be, but you can really make things that are appropriate to the data, to the data set, to the purpose of the chart, to what you envision and what you want to create. So I think that that underlying that you're really at that core sense of like mapping from data to visual form is just super powerful. I'm one of the things that you really, that's really compelling about D3. Yeah, I totally agree. It's the same for me as well. It's just the fact that it's a tool, it's like the building blocks that let me be very creative and do things that I want to do with the data instead of having to conform to one of the predefined chart forms. And also what I think is, is that somebody on the chat is saying they're not, they've got it. Sorry. That was my fault process again. Oh, yes. So it's also very well suited for the web. And I also like how easy it is to get, well, I mean, easy in terms of D3 once you've crossed that hurdle is to do things like transitions, to move things from here to there and make things bigger. Just these sort of added things that I think could be hard and other tools are at least it's when I started back into that 15, there was virtually no tool like it let you do these fun transitions and that was what really got me hooked as well. But I stayed for the like the creative power that D3 gives you by not being specifically a charting library. Brian, what do you think? I see you emphasizing both. Yeah, I agree with a lot of that stuff. I would like to point out that you don't always need to use D3. There's a lot that you can do without D3 and D3 is not always the right tool for the job. So I just want to throw that out there that it's not like D3 is the only thing that we need to use. You can create a lot of stuff really fast with other tools like tell blow, it's amazing for really quickly exploring the visual design space or power BI, even Excel. But there comes a point beyond which you just can't go with a lot of those tools. And I think both of you mentioned it. I like to think of it as this wall of abstraction where there's a tool and people have come up with a set of things that you can do with it. But as soon as you want to do something beyond that, like that the tool authors didn't think about, you just can't do it or you have to really have some hackish workarounds when you really struggle. But D3 does not suffer from that because it's fundamentally a bunch of building blocks, kind of like Legos that you can compose together. And there's no predefined limit on how you can compose those or how, you know, Tallah, you can make your little Legos deck. And so it's fundamentally limitless in terms of the interactions you can add and the customizations you can do. Yeah, I love that. I think there's lots of, you know, possibilities when you open up that world to not be constrained by what someone else has thought that you might need to do versus what, you know, you can do with all of that potential. So I'm curious for each of you, you know, how does opening up that world of possibilities in D3? How does that influence how you approach data visualization? I think for me, it is again that creative thing. I, for presentation once, I kind of looked back through all of my backlog of the visuals that I deemed worthy enough to save on my computer. And I really noticed this sort of growing thing, like starting out with the barter's and the line charts, you know, they're the straightforward things, not with D3 necessarily, but with R and Tableau. And then learning about D3 and making like the gallery charts, remaking those. And then getting comfortable in D3 and then turning it into, okay, so I have this data set. How do I want to visualize it and making visuals that don't even have a name because like Zen set, they're unique to that specific data set. And that's my approach now really is that if I, you know, I have my data set and I start thinking about designs, I'm just kind of free. I draw my designs just with them paper because I don't want to be constrained by whatever a tool might have as options or not. And then I'll see, you know, can I create this? And usually with D3, there are ways. And sometimes you need to, sometimes you need to compromise here and there, but that's usually to do the speed things with the browser or browser bugs, these things. And, but yeah, so it's, it's just this free way of working. But initially, it also really influenced me in the fact that I could now do these animations and transitions and how does that actually and interactions. So if I have a data set that's more complex and it's just impossible to show every aspect of it on the screen at once, how can I do this through animations or with interactions? And that was also really a new way for me to think about data visualizations that the three kind of opened up for me. Yeah. Karen, do you want to go now? Right on. I can sort of speak after that. The idea of sketching really resonates with me. And I have to say I've been influenced by you, Nadi, in terms of sketching because a lot of those older pieces about, you know, sketching and the process pieces that you did with Shirley Wu. Those were very inspirational to me. And it leads into, you know, when I heard this question, how did worth working with D3 influence how I approach data visualization? Before D3, I used to approach it based on the tools that were available and the limitations of the tool. And so the limitations like this comes back to this wall of abstraction. That sort of guides the process. Like if you're a, I don't know, a Tableau person, you know, I've seen people, like just loaded in and see what can happen and then go based on there and, you know, you're operating within this limited realm. With D3, I personally have changed my process to think a lot more about fundamental questions. Like what is the shape of the data? Like what are the columns that are available? What types are they? How can they map to visual marks and channels and think about visualization design? And what are the tasks at hand? Like what are the users supposed to get out of this data viz? And then based on those two ingredients, I then enter into this iterative design loop of sketching on paper. And so because I know D3 is fundamentally limitless, I know that I can feel free to sketch up any and all ideas that might make the most sense with the particular circumstances, the particular data, the particular tasks at hand. And so yeah, I focus on more like user needs design in the traditional sense and sketching. And then once you get it into code, I find it's very amenable to iterative feedback driven development, which is not true for a lot of other tools. But I love, you know, having weekly client meetings and iterating on the data viz, making it better, getting feedback, making it better based on the feedback. And D3 really supports that kind of a process. Yeah. And yeah, so the how to D3 influence what I think about Viz, I think it's, I think it's really that sense of being able to really, that you have to engage with that transformation from data, from number to visual form that you're doing the definition of, wait, how do I turn this number into a color? How do I turn this number into a position? And you can do that with other charting libraries with GG plot and R, especially the grammar of graphics libraries at that kind of mid-level of abstraction. So GG plot and R, plot nine and Python, observable plot in JavaScript are kind of all grammar of graphics libraries at, I'll tear it to some extent too. And they are all kind of at that middle level of grammar of graphics of abstraction and D3 is a little bit lower level. And I think whether you use D3 or not, there's a lot of power in thinking about graphs from the perspective of what is that transformation? How is this number being turned into a position, a color, etc. And you can actually do that with sketching as well. And I, when I teach data visualization or when I work with a client, I actually really encourage sketching with paper and pencil. So I think if you're, if you're on the point where you're like, I'm not sure if D3 is for me, I encourage you to start with a paper and pencil and start by sketching and think it, like before you go to your tool, think about what you think the data might look like, what it would look like if you drew it, what you want those transformations to be, what should be on the x-axis, what metric goes in the y-axis. And, or how do you want those colors to be defined? And I think that that's a way to get that way of thinking with it without D3. But I think it was one of the really powerful parts of having learned D3 early in my data of his career that certainly had an influence throughout. And I really remember the first point, and again, you can do this with D3 or without, but that the moment where, like, I've been a data analyst before, I've made bar charts. And I kind of thought of as chart as like a holistic sum that a chart was a thing. And that I was doing and kind of some work with Martin Wattenberg, which was amazing. And he said, as the first step, he said, okay, draw a chart in JavaScript. Like, don't use D3, don't use anything, just like use the bare vanilla SVG and define the chart and make a bar chart. And that was the first moment where I was like, oh, like, it's really height. And it's really about drawing rectangles and turning data into rectangles. And I knew that. But somehow having that relationship where I had to make the rectangles up here and had to define that transformation really changed the way that I thought about what a chart is. And now I can hold both those definitions in my mind, kind of the engineering perspective of like, I am drawing rectangles and rectangles and lines for axes. Or the illustration perspective where you're drawing it yourself. And I can also hold kind of the analyst perspective of like, it's a sum of whole, it's a, it's an experience that you experience the whole chart at one time. So regardless of if you learned D3 or not, I encourage you to put yourself in a position where you hold both those truths at the same time, a chart as a, as a full experience and a chart as a thing that is constructed out of, out of data, transforming into visual form. I love that. Yeah. And we've got a lot of great questions coming in in the chat as well. So I'll try to integrate them in the conversation as much as we can. But I guess before we get into some of the details about the pieces of D3 fit together, and if we talk about that a little bit, why do you think D3 has become so popular for data visualization? Is it the interactivity? Is it just the kind of blank slate like we were talking about before? Is there something inherently different about it that nothing else has existed like this before? It's limitless. That's why. I think the examples, like the, the, the examples for sure. The examples, all the, all the answers that, that my boss, not the creator of D3 posted in Stack Overflow on what was it then? Google, like Google email groups or something I can't even remember. He was just everywhere answering questions and making all of these examples. And that made it so much easier than some of the other tools that I was trying at that time to make things and go a little bit beyond the default and actually get to learn the D3 as how it works and then being able to use that as jumping off point to then learn on it. So it was both like the possibility, the potential, but definitely also really all of the examples and help that that my gave at the start. And I think I mean, Mike was working at the New York Times at the time collaborating with incredible journalist and data visualization and data analysts that were on that team. And I think that also meant that the tools really getting pushed and it was also been used both for kind of showcase examples of like here's how you can do something. And I was also being people were seeing it in the news, people were seeing what was possible and how much they were really pushing the envelope with the New York Times. And I think also that that also fed back into the tool seeing that Mike the developer was at the New York Times. And so I don't know all the stories. I'm sure there's some good ones. But seeing I think the tool that really, really honed because it was being pushed to its extent and really being used so much. And so you can both see the kind of theoretical possibilities of here's a concrete like tied up example of like that is really tight and you can look at the code really easily. And then also what is possible when you when you push the boundaries and put that on the front page of the news. Yeah. And the blocks. Right. Yeah. Exactly. Go ahead. No, sorry. Sorry. Sorry. Just like, oh, the blocks. It doesn't exist anymore. Like, since how long? Two months now. Oh, my gosh. So if I if I may share my screen just briefly, this is a really entire screen. Blocks that are went down, but little known fun fact, there is an open source clone of blocks that work. And this is what I still used until like find examples. And it's backed by GitHub just and here are all the original older blocks. Oh, I need to know that. And it's all in here. So first, non-technical people. Can you give us a little bit of a sense of. Yeah. And then those part of the company. So like this thing blocks.org. It's in the way back machine. It used to exist for I think over 10 years, it was like the de facto place to look for D3 examples. And it's backed by GitHub just and GitHub just as a service by GitHub.com where you can host like little miniature Git repositories that are just files, just a couple of files. And so each of these things is just a couple of files. And you can go to these pages and study the code right here. And a lot of this stuff is old with like D3 version, I don't know, three or four. But it's all the techniques are all implemented there. And I think it's a gold mine of stuff. And so a couple of nice profiles like Entelod and Johnson, he was hugely influential for me. Someone from him from his blocks here. And, yeah. Adam Pierce, the guy who created this clone of blocks, and the last thing I want to say is you can actually search it in Google by saying site colon this like world map or whatever you want to find, and you can locate things this way. So, yeah, it's still there in spirit. Yeah. I just nice screen up as well if you want to show that. So this was the very first thing I ever made in D3. And I think one of the things that was wonderful about blocks and again, I searched for like if you're using observable or like GitHub or any other however you do things, I think there's something wonderful about being able to share things that feel unfinished. And the way blocks was set up was it felt very okay and safe to share things that were felt unfinished. So I got really frustrated learning D3 on dealing with number formatting. So it's like, oh, I'll just like make a tiny tool. And Adam Pierce who did this blocks clone, he has a great talk from 2016 OpenVizComp on the power of tiny tools. And actually shared this as an example in that talk. But it was just nice of like I like solved my own problem of like, oh my gosh, I can never remember how to format numbers. Made this little tool, you can see all the code below. Again, this is a past version of D3. Probably more code than I needed. I was exploring instructors of the time so I didn't know what I was doing and probably did not need that for this. But put it out there and then it became really popular. And for a while, if you searched for D3 number formatter, it was the top Google search result. I like it. It's a lot of fun. I still use this every time I have to figure out what these things are. I've been here so often as well. It's like, this might be the most useful thing I've ever created. At least in terms of like number of people that have used it. But I think encouraging, like I think it's great, again, no matter what tool you're using to have ways to just share like the little things that make it useful or like the little things that help you. So thinking about people coming to D3 for the first time or hearing about this amazing tool that has all these capabilities, but might not have a coding background. What are some of your thoughts and recommendations for that kind of startup cost that comes with learning any new tool? What does that look like for D3? I think one of the things that's really evolved with D3 over the last 12 years since it started is, I think when it started, it was kind of more of a monolith that you, that it was like D3 was your tool for managing the DOM, for doing interaction, for doing static, for doing customization. It was a little bit more of a monolith. And I think both as D3 has evolved and as the web has evolved and other tools have come into place. It can be a little bit more of like a pick and choose, like choose your own adventure, like which parts, which parts of D3 really fit your use case and what you need. So don't feel like you have to learn all of it. It is okay to learn the parts that are helpful to you at any given moment. I also think that there are so many sort of wrappers around D3. I mean, D3 itself has plot. But there are sort of in between doing no coding, which I think raw graphs is a great one that has all of these sort of the normal D3 visuals, but especially also a lot of the more exotic ones that you can just do, you put in your data and then you can choose pick and choose. And what you want to see, so all the way down to actually D3, like in between that is, there are so many tools that sort of wrap more and more and more around it. Where you can kind of choose where you want to be or slowly dive in. Other things that work really well for me in terms of when I started with D3, I knew how to program in R and in other tools, not at all the web languages. So I can't quite say how it is, like if you have absolutely no programming language, that can be a bit of a intense. I think I remember learning the program for the first time during my university years, and that was intense. So, but learning the web languages, I had this book called Interactive Data Visualization for the Web by Scott Merri, which assumes that you know nothing of the web. No HTML, no CSS, no JavaScript, and that was a really great, for me at least, way to get into that and make your very first interactive color changing, height growing, bar chart. And then from that point, I could sort of jump off again and use examples online. And there are so many more tutorials out there by current, for example, but also I know, but Shirley Wu has some things on frontend masters. And other places and other books that you can try and find one that fits your style of learning and your level of where you want to start. But yeah, you can also say I never want to learn how to code and stick with raw graphs, but yeah, you'll always be sort of in this case limited then by what the tool has decided. You can do. I think one thing to keep in mind is your learning also is that what is easy and what is hard really depends on your background. And there's no like one linear path. Like if you come from an engineering background, from a frontend development background, there's going to be some things that are trivial for you that are obvious, whereas you get to those data transformations and it's confusing or some of the choices you make about design are really hard. Like using Bezier curves, that parts hard, was if you're coming from a design illustrator background, you might be like, Bezier curves, great, I'm at home and find some other parts hard. I came from an analysis background and the place where I almost got tripped up, so I was actually at a at a Scott Murray workshop learning D3 in 2013 and could not figure out how to set up my local host so I could do local development because I didn't know where the files were supposed to be and the person sitting next to me helped me figure out like how to set up my file structure and it was a trivial thing. It was an obvious kind of if you'd done any development, it was obvious, but I was like, I'm done. Like I'm out. This is too much. It'd be very nice help me. So I think just as you're learning more as then I'm when I got to the data transformations, I was like, this is math. I'm at home. So I think it really is like if somebody else is like, oh, let's do the easy stuff and then we'll get to the hard stuff with D3 and you're like, that was not easy for me. It might be because you're just coming from a different background than that person is assuming. Also now there's more tools. You can do things with code mirror. There's other places to learn. There's more online playgrounds as well. Yeah, don't like, what is easy and what is hard depends on where you're coming from and what you're bringing to the table and what's new to you. I just want to say that makes me feel so much better because I have I struggle so much with like the file structure thing and like getting the setup that I just assume that everything else is also going to be equally as hard and then just ahead of wall. So that makes me feel much better. Anyway, sorry, I had to interrupt it. Yeah, on this point, I want to have like two contributions here. One of them is if you try to learn D3 just for the sake of learning D3, like finding resources that are sort of generic or like maybe not aligned with your interests, chances are you're going to sort of fall off, so to speak. But if you come at it with some data in hand that you really care about or like a pet project or like a dream project that you've always wanted to do. So I would say even if you don't have any coding experience, like it is a heavy lift, you're going to have to learn JavaScript. But I think it's better to learn things just in time rather than just in case, meaning, yeah, the best time to learn something is when you need to use it. And so I would say even if you don't have that much coding experience, come at it with a data set and a project in mind that you want to do. And then just get to the next step, make incremental progress. And along each of those increments, you're going to have to do maybe 10 or 50 Google searches and like watch tutorials about very specific JavaScript technical stuff. But as long as it's all aligned to some sort of vision that you actually care about, then I think you can see it through and you can really complete your journey. Yeah. Yeah, that's so good. Yes, that's exactly how I learned D3. Just learn it when you needed. It was like a puzzle being built up and it took me maybe a year or two years before I felt like I finally put in the last piece of the disk like, that's how long it took until that time. It was and still is when I do things I learned when I when I needed. Yeah. And I will say and I I do I love D3. It's been really powerful for me, but I remember when I so I was a data analyst and then I took this leap. Like for two years, I kind of was using data viz more and more just as a skill as a data analyst. And then it was in 2013 when I was like, you know what data viz like this is the heart for me. And I decided to and also that it made I wanted to do data viz on the web. I wanted to do bespoke and custom work. I was really inspired by the New York Times. I chose D3 and learned it. I remember going back to my analyst team and they're like, you're doing this amazing data viz work. Like if we want to do more data viz in our work, should we learn D3? And I was like, if you're job, if your goal is to be a data analyst and you're already working in our and you want to do more data viz in your work, I would say be more intentional with the tool that you're already using. Think more about how to use like how to use if you're already or if you're in cell, if you're already in cell, the first step of wanting to do more data viz is to do more with the tool that your day-to-day work is already in or if it's a tabloor or whatever. And then if over time you're like, actually I want to be doing custom work. I want to be doing things that are interactive are on the web or it's the right tool then it's the right time to learn it. But if you're if you're just excited about data viz like D3 might be the right tool for you and definitely dive in and it's awesome. But there's also great ways to just bring more data viz into your day-to-day work into day-to-day life that you can just by doing more in whatever tool you're currently using. No, no. So remember I said I had two contributions on this front. The second one I want to mention is that there is this deeply ingrained culture in the D3 world of fork and modify. Meaning you find an example out there open source maybe on blocks at org or observable or somewhere else. That's kind of like your thing that you're envisioning but not exactly the same. I want to say that there is absolutely no shame in copying an example wholesale like copy all of it and paste it into a new project and then try to swap out the data with your own. And you're not going to understand how it works and it's not going to get you to the end but it'll get you to the starting point. You know what I mean? And once you have working code with your data it's a great wonderful place to be and it gives you a feeling of accomplishment. And once you have that you have all the tools you need to sort of reverse engineer that example that you forked and modified. And so then you can build it up from scratch bit by bit and really understand each piece of code. Yeah I just wanted to say fork and modify for the win. You give credit if you're going to publish it for it. And give credit yes. For modify and attribute. Don't forget that part. Awesome. Well I think some of the questions in the chat kind of ever left with what we've been talking about. But I was wondering if you all wanted to give a little bit more concrete examples and definitions and talk about what some of this D3 lingo and the inner workings and getting set up looks like. So you've talked about JavaScript a little bit. What is observable for people who really are coming at this with just a notion of I need to learn D3 but don't really have a context for what currently exists. How do you learn D3? I guess the question. I find it hard to say like how do you currently learn D3 because I feel like such an oldie then. Even though it's not. It's been eight years. So for me it was that book interactive data visualization for the web. It has a second edition. I can't say I mean that's a few years old. I can't say how relevant that still is but I think it's still pretty okay because it does the examples that it takes you through are sort of the basis. The basis stays pretty much the same. But these days you might say I want to learn D3 plus React whereas I don't even know React because I never kind of got into it. I always stay very vanilla JavaScript. But yeah generally you have to know a little bit it. You'll need to know JavaScript. Learn JavaScript along the way. Learn something about HTML and CSS. You'll get a code editor. I use Visual Studio code. It's also an open source tool with all kinds of great sort of extensions in there. A code editor and a browser. Any browser of your choice works so that you have like your code editor and your browser. But other people learn D3 through observable. Like you say observable is a website, a company made by Mike Boss, not the creator of D3. It's a great place. It's kind of like the new place for blocks where people can post the snippets. They can also get really long because you can have text in between it. It's kind of like Jupyter notebooks in a way where you have like the visuals and the code. You can see this. You can also fork it like her and said and then make it your own thing. People have done tutorials on there as well of learning D3. I think observable even has tutorials on how you can get started with observable and D3. That's where people can also learn if they don't want to have that setup of a local host in your own code editor and your browser. Although I think if you are passionate, you start to get passionate about D3. It is at some point probably time to take it like get your own setup as well. If you kind of want to elaborate or create things because they will live outside of observable and observable has some quirks around how the code kind of flows together. It's not like you can copy pasted and then put it in an HTML file. It'll work. That's only a slice of it but you have to see that. I would add I think this is part one. There's two fireside chats. I know some of the folks in the other fireside chat do more with either D3 plus other tools. Amelia Wattenberger who's going to be in that chat also has some teaching materials. Our chat current has some teaching materials that you should talk about as well for getting started. Yeah. And for what is worth professionally for like consulting projects, I tend to start with VIT, it's a really nice set of tooling around building bundles and importing frameworks from NPM, which is node package manager. That's where all these magical packages live. And I tend to build with React. But not initially, I like to start projects in vanilla JavaScript and then only when the complexity builds to a point where it becomes unwieldy, then I tend to adopt React. But I have friends who prefer view as a framework, VUE, that amazing framework. Although I'm not that experienced with it and Svelte is sort of the new kid on the block and very nice for data viz apparently. But I also don't know it very well. But if you all would be down, I can do like a five minute tutorial right now of like how to start with just vanilla JavaScript to purely vanilla. Might be good for folks new to it. Does that sound cool? I think that'd be really cool. And I'll start a timer. So I'll go over, I have a tendency to go into rabbit holes and such. So five minutes here we go. There's lots of excitement about this in the chat. Oh really? I hope not to disappoint. I mean, it's not going to be that fancy really. Yeah, what can you do in five minutes with the three though? Right, just get it get to Hello World is what I plan to do. So I'm in Linux on the terminal here using Linux commands. There's nothing in here. I'm going to use VIM. I like to use VIM. I'm sort of old school and crazy in that way. Although VS code is awesome. It's what most people use nowadays, but I still use VIM. So we have to start with an HTML page. And for an HTML starter, I really like this older tool called JS bin. JS bin is this collaborative like online sandbox thing. But I like it for its HTML template, which is super simple. So I'm just going to copy paste that into here and fix the indentation. Oops, sorry. So this is an HTML page. Doc type HTML tells the browser, okay, this is HTML version five. You don't have to operate in a quirks mode. I think that's what that does. And then everything is inside of this HTML set of tags. These are tags here. And it creates this tree data structure, which is called the document object model, the DOM. And it starts with the head. The head is loaded completely first before the body. And the head has stuff that's not really visible on the screen, but it sort of directs the browser. What to do? For example, the title I'll put D3 hello world here. And that's going to show up in the browser tab. And then in the body, I'll just put hello for now. And the task before us is to get this page to show up in a browser. And for that, I'm going to use this NPM package called HTTP dash server. So NPM install dash G for global, meaning it's going to introduce a new command HTTP dash server. And I it's probably already installed. And then I can type HTTP dash server in this directory. And it will start a local HTTP server. And so you got to understand all web pages are are based on HTTP when you low when you load a web page, it makes an HTTP request to some server. That's usually mapped to a domain name, but this is what they call local host. It's just running on my computer. And it says 127.0.0.1. You could also put local host. Same thing. But we see that it's there. It says hello. And so in the last two minutes here, I'm going to load in D3. So there are these things called CDNs, content distribution networks, unpackage comes to mind, UNPKG. This is a CDN content distribution network, I think, backed by NPM. And so for example, you can access the react library like this. But if you just put unpackage.com slash D3, it will redirect to the latest version of D3, which is minified. And this is all of the three right here. And it's minified. It looks like mumbo jumbo. It's like compressed. So it's a small file. Don't worry. No humans can read that. No humans can read what that's not. Yeah, it's not for humans. It's not for humans to read. And this is just sort of a conglomeration of all the D3, what they call micro packages or sub packages. But anyway, in our HTML, I'm going to make a script tag and put the source of this to be that URL that I just copied. And this will load in D3 onto the page. And then in the body, we can introduce a script tag right here. And this allows us to enter into the realm of JavaScript. And so we can say console.log. Oh, there's only 10 minutes. Almost there. Five minutes. I'm almost there. Also.log D3. And then on our page, if we open the dev tools, which are invaluable, you need to use the dev tools. And then if I refresh this page, it says, okay, there's D3. And we can do something super basic like now that we have access to D3 in a web page. I'll just take like another minute or so to like make something. We can select the body, which is the body element of the DOM. And append an SVG element. And then I usually use prettier, by the way, to automatically format the code. And then to get the SVG to show up, we have to set the width and height. So I'll just set it to like, I don't know, 500. And then we can go ahead. Oh, I think it gets like a default width and height, if you don't set it. Yeah, it does. It does. It's some kind of weird like 300. Yeah, 63233. 3, 3 something. We can actually find out by commenting this out. And then we can append a circle, which is an SVG element to draw a circle that has a radius of, let's say, a hundred or let's say 300. So we can see the edge of the screen. And I'm sorry about the indentation there. I refresh this now. We get a circle. Oh, my browser zoom is out of whack. So if my browser zoom is at a hundred, we can see that, oh my gosh, this is the default dimensions of the SVG, which is 300 by 150. If that's not what, if that's not the size you want, you've got to set width and height like this. So anyway, yeah, that's basically how you can get started putting something on the page with D3. And from here on out, it just becomes more and more magical. You can introduce data arrays and create multiple circles and then use scales to map them to data and then implement all sorts of visualization techniques. But this is in a nutshell, how you can start with D3. Yeah. Thank you for sharing that. There's a bunch of comments in the chat that the demo is really useful. And I agree. I mean, I think the first time that I made a circle, I didn't think I was like, I did that. I made a mix of the range that way, which is really cool. So thank you for sharing that. I think one thing that we also wanted to talk about is just workflow with D3 and other tools. And I think Dan and Nadie maybe wanted to share an example of work that they've done using Illustrator. There we go. And Dan, you're on mute. Yeah. So really quick, just on the data definition, I gave a talk at a D3 meta back in 2018 that walks through like going from the schedule made to how I did that, like how I made the line show up and like what the math was behind that. I'm happy to, I can post a link after a little bit later. I'm on that. But I thought it might. So this is a piece that Nadie and I did back in 2017. One of the, it was amazing to work together. And one of the reasons I wanted to show this is that we also both wrote a book behind the scenes blog post. And this was for Science of the American, as about when babies were born. And Nadie's, this is Nadie's post that I'm currently showing. Showing how awesome her writing is. Like starting. So actually we started the project based on a talk that I gave back in 2016 and had this data kind of from our rectangular projection, kind of standard scatter plot. And as you started working together, Nadie started experimenting with some other forms in R. And then we, when we kind of were like, yeah, we want radio, like there's some things we want to hear. And then we switched into D3. And you can read the whole blog post about what exactly would happen. And I think what D3 led us to do that we couldn't do before was like start breaking. We didn't have new coordinates. We put this little break in the top. So you kind of had a place to start and end the day. This is like a 24 hour day. And then one of the things, and then eventually put an illustrator for the final, for the final legend and polish. So I think this piece really shows kind of that one way you can use it of starting in R for your data exploration. When you start getting idea of what you want switching to D3 and then polishing in Illustrator to add all the customization and not the customization, sorry to add like the fine annotations and polish and legends. And one of the reasons I thought this was so powerful was like this viz from the 1800s, one of my favorite because of the boldness of this chart. This is price of cotton in New England in the 1800s. And you can see, I just love that they just like broke the frame. And we're like, yeah, this is ridiculous. Like during this little war, the price of cotton got real expensive. And I was really inspired by that in this piece and we broke the frame. And I think again, that was a thing that was it like typical viz tools aren't set up to break the frame. And because we're using D3, it kind of led us to that where it was straightforward. And and Nadie, would you want to say more about this project? Oh, yeah. I also really love working on this project. And one thing also that, for example, that D3 really made possible is that in the final result, it can be very subtle things. Like some tools can let you do gradients. We have the inner bull gradient and the outer gradient. But I wasn't happy with that. And eventually thought that we all have all of these sort of concentric circles and they have shadows and they like they have like different layers of yeah, that's so that way yeah, you can see sort of the concentric circles. And then the the the the the line chart is sort of masking that part. And that just that created this idea of like as if piece of paper or cut out and then layer on top of each other giving like a little bit of shadow. And that was just like those are kind of the the small design things also that D3 lets you do that many other tools, you know, how many people would ever use that option. So they don't they don't quote that option in there. And you could do this with illustrator. I mean, that's also a tool that lets you really be very creative with with what you do. But then it would have been very hard to you know position all of these. Was it 1400 and 40, you know, minutes in a day. That's something I wouldn't want to have to do with illustrator. So, yeah, it's like these three really makes it easy to work with you know, few data points with millions of data points and also be creative in how you want your visual to look. Although I will admit, illustrator can make it make you more creative even because in D3 you still need to figure out how to program the computer to do it for you. But it's still I mean, once you figured it out through stack overflows and Googles and other people's examples, yeah, it's you can get stuff like that. And did mean that we could swap out the yeah, we actually use a slightly different form for this for the detail like the yeah, we did for the main one. Yeah, main one. But because it was in code, we were able to like show different different cuts to data set as well. But yeah, and it was so joyful. It was like joyful such joyful iteration and I loved how Nadi was like unsatisfied with some of our first that you can see in her blog post like we're getting this like little moriang effect that like we couldn't make it go away and like joy of the email. It's like I gone to bed because it was weird different times I was and came up in the morning when she when she emailed me the like kind of birthday cake views. I mean, I was really love working together. I love how how detailed you are in the data and getting to know, you know, why is this happening? Why is that happening? Are reaching out to people then digging deeper into the C section to the natural ones and then it's like it was yeah, it was it was an awesome collaboration. I wish we could do one more. Why should you do that? So thank you for sharing that. It's nice to see kind of complete examples, but also I appreciate the blog posts with kind of the background of how it all came together and there's a couple questions in the chat and we're running a little short on time but wanted to get to them. It just about, you know, how what the process is just in terms of, you know, you mentioned Skepthing before there's also, you know, possibilities working in R first and D3 then other tools. And a similar question that someone had was about, you know, how do you do this process and iteration with clients who are looking for something very specific. So, Karen, do you want to start us off with the answer to that question? I would and if I may share my screen again. I think there's a great thing to wrap up with. I'm working on a book actually and this is a page from the book which it's about what is the whole process of a date of his project and this is usually, you know, in the constant context of working with clients. So I'll zoom in a little bit. First, there is kickoff where we set up the project, meet and greet, set up a staging site. Somebody asks, how do you show work in progress? A staging site is key where, you know, the working software is deployed to some link that the stakeholders can access at any time and sure, like, we'll put together decks with screenshots from there or maybe drop screenshots in a Slack channel or something. But having the staging site live is one of the most critical things. And then we get the data, get our hands on it, sketch the vision and collaboration with stakeholders, get to the first visual, like get the data on the screen. And then from there, you know, branch out prototype a lot of different visualizations and, you know, iteratively figure out what is the best fit for the needs. And then layer on top of that, interactions. And again, use an iterative feedback-driven process. And then finally, you know, put the finishing touches on it, make sure everything is working fine, pixel perfect, and then hand off. Finalize the deliverable, write documentation, provide assistance in migrating ownership. So that's my take on the overall flow of projects. I love it. Yeah, that's so comparable to my flow. I like the staging website. I like to use get up pages. It's so easy. I need to get, I'm like, it's saving the code there anyway to save it and then just make a get up page and show that link. Thanks, Sam, what about your process? I do a lot of advising now. And sometimes I, so often I'm using D3 to kind of open up the space of possible. And then we may or may not finish it in D3 or actually do it somewhere else. And my tool choice often has to defend on like what tool my client is using. And I use the tool that they are using. But I think it's, often I use it to really break open the space of possible and feel very unconstrained in terms of shapes and have done things of like a forescatter plot of pie charts. And like sounds bizarre, but it was really useful in that moment. That's the board conclusion of a thing that like no water tool is going to let you do a forescatter plot of pie charts. Well, this has been super fun. And the time just flew by. I can't believe it's been an hour already. But we'll just go around and any last words of advice for people getting started and or any resources that you want to share. I can put the names of those in the chat as you're sharing them. So, Nadi, you want to start? Sure, yes. Well, current already said this basically, but my advice would be to create, create a lot of things even if you get started. And like he also already said, it's one of my main points of advice always is to use a data set that you're passionate about about some sort of topic that you know about. There's usually some sort of data to be found online about something that you really like, even if it's like roller skating, the reward of the rings or some book or the trees in New York or squirrels, sightings, somewhere like there's rear data sets there. And if you're passionate about it, you have so much more sort of drive to one to keep continuing versus some sort of more drier like general statistical data set that you could easily find on the government website. And then kind of want to visualize that and learn, like learn as you at that point, but with each like small project that you do, you gather these skills that you can make bigger things and bigger things and you can learn what you like and what don't you like. And resources for that are these days while you used to be blocked, these days I would say observable is really great. And stack overflows just you know googling your way to answers there. Let's see, I also actually another and I'll stop after that I can make and I can go on all the ways. Pinterest boards, I really like to use that to curate and keep like keep other like inspiration. It's basically if I see something come back, could be database, could be something else. I will pin it in different boards and before I start sketching a design, I'll kind of scroll through some of these boards and then see what sticks, you know, with with the thought in the back of my mind, like I'm have this data set and I want to visualize it this way. So that also really helps me kind of remix ideas. So try things that I've seen somewhere else. Like it's it's the steel like an artist. You don't have to reinvent the wheel always. But if you do use someone's work very literally, don't forget to credit them. Awesome. Thanks, Maddie. Dan, how about you? I would say there's the importance of community collaboration asking for help. You do not have to solve it all by yourself. I think one of the things that's so magical about data is is that like there's so many components to it and there's no way that any individual can be an expert in all of it. You cannot one person cannot be a master storyteller, programmer, analyst, UX designer, data designer, like there's just too many pieces, domain expert and so don't don't expect that of yourself and that's not what others are doing. Either the work that you're seeing is often collaborations and even if it's attributed to one person, they had help along the way somewhere. So reach out for help. Join a community, collaborate and just to shout out, I'm part of the elevate community with run by Ali Torban and sorry, I'm gonna make sure I don't miss anybody. Duncan, Ali, Will and Gabrielle, that's a great community. Also the D3 Slack, etc. But find some people. It might be just like some friends that you keep in touch with that are also doing data viz or D3 but don't try to do it alone. And the DBS mentorship program is also very smart as well. Yeah, DBS. Sorry. That's okay. It's current about you. Yeah, I would say like if you're just starting and you really want to get into D3, you can. You can do it. Establish a mindset of persistence. Like don't give up. Just keep going. Establish a practice where you sort of make incremental progress at regular intervals. Don't let it stall. And don't be afraid to share your work. Even very early work, people love to see it. Twitter is a great place. The D3 Slack is a great place to actually ask for help. Like if you get stuck on something, there's the hash help channel in the D3 Slack. And I don't know nowadays where the onboarding link is for D3 Slack. There was some controversy about that. But it's possible to join that. Instead of amazing, amazing community. So don't be afraid to ask for help. And yeah, share your work early and often. And just keep going with it. And good luck and have fun. Have fun. It is a joyous endeavor. It's really a thrilling thing to get things to show up and move around on the screen. It is. So that's so circular indeed. On the internet can be a wonderful place. Most communities are great. I think data of a society in particular has really, really sought to create a welcoming support of community. There are also parts that internet that are mean. If you share some work somewhere and get slammed for it, and it's just mean, go find a different community. Don't. And people, I've been in a database for a long time now. And I have had my charts show up. A recreation of one of my charts showed up on worst data is ever on Twitter or somewhere. And something that I put on Reddit got slammed for having too many lines of code. And I just don't engage in those places. So I think that happened earlier. I was fairly established by the time those things happened. And that's the Reddit one. But just find the people that will support you and will help you iterate. And we'll see the good and what you're doing and help you bring out the best in it. And if the internet is mean, I'm sorry, the internet can be mean. And don't find your people. And again, could us a data of a society? I think it's been really amazing seeing what what database society is pulling together and creating really supportive places to learn. Love it. Well, thank you all for joining today. This has been so fun. Lots of great feedback in the chat as well. So we will say our goodbyes for the day. But in two weeks we'll have part two of our D3 chats. So tune back in for that. And it has a lovely rest of your day. Bye. Bye. Thank you, Jill. Thank you.